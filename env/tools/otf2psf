#!/bin/bash

# otf2psf : Converts OpenType(OTF) Font and TrueType(TTF) Font into PC Screen Font(PSF)
# Author : Ji-Hong Park
#######################################################################################
# Useful for glorious TTY users with need for fonts with better readability.
# Still supports basic conversion, without options from otf2bdf and bdf2psf. TBD

#ANSI Escape Code for PRETTIER help message.
RED='\033[0;31m'
NC='\033[0m'

#Determine whether to call help or not, and can be used for argument error message
if [ "$1" == "-h" ] || [ "$1" == "--help" ] || [ $# -ne 5 ]; then

	printf "usage : otf2psf (FONT SIZE) (WEIGHT) (CHARACTER SET) (OTF/TTF FILE NAME) (OUTPUT FILE NAME)\n\n"
	printf "\tFONT SIZE - Passes desired font size. If you see 'Bad font height' message when \n\t\t    using setfont command, you need less FONT SIZE.\n"
	printf "\tWEIGHT - Higher WEIGHT will result wider font. ${RED}THIS VALUE MUST BE INTEGER${NC}.\n"
	printf "\tCHARACTER SET - You can select character set the converted font support.\n\t\t\t${RED}Currently, Uni1 / Uni2 / Uni3 only${NC}.\n"
	printf "\tOTF/TTF FILE NAME - Name of otf/ttf font file you want to convert.\n"
	printf "\tOUTPUT FILE NAME - Name of output psf font file.\n\n"


else
	filename=${4:0:$((${#4}-3))}
	bdffilename=$filename'bdf'
	
	if [ "${5: -4}" == ".psf" ]; then
		psffilename=$5
	else
		psffilename=$5'.psf'
	fi

	charsetname=$3'.512'

	otf2bdf -n -p "$1" -r 100 -o "$bdffilename" "$4"
	
	grepresult=$(grep -w "AVERAGE_WIDTH" "$bdffilename")
	width=${grepresult: $((-1*(${#grepresult}-14)))}
	new_width=$((20+${width}-(${width}%10)+10*${2}))
	
	sed -e "s/AVERAGE_WIDTH.*/AVERAGE_WIDTH "$new_width"/" "$bdffilename" > temp
	rm "$bdffilename"
	mv temp "$bdffilename"

	bdf2psf --fb "$bdffilename" /usr/share/bdf2psf/standard.equivalents /usr/share/bdf2psf/fontsets/"$charsetname" 512 "$psffilename"

	rm "$bdffilename"

fi

